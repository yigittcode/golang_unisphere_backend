basePath: /api/v1
definitions:
  github_com_yigit_unisphere_internal_app_models.RoleType:
    enum:
    - STUDENT
    - INSTRUCTOR
    type: string
    x-enum-varnames:
    - RoleStudent
    - RoleInstructor
  github_com_yigit_unisphere_internal_app_models_dto.APIResponse:
    description: Generic response structure for all API endpoints
    properties:
      data:
        description: Response payload - specific to each endpoint
      timestamp:
        description: Timestamp of when the response was generated
        example: "2025-04-23T12:01:05.123Z"
        type: string
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.ClassNoteFileResponse:
    properties:
      createdAt:
        type: string
      fileName:
        type: string
      fileSize:
        type: integer
      fileType:
        type: string
      fileUrl:
        type: string
      id:
        type: integer
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.ClassNoteListResponse:
    properties:
      classNotes:
        items:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ClassNoteResponse'
        type: array
      currentPage:
        description: Current page number (1-based)
        example: 1
        type: integer
      pageSize:
        description: Number of items per page
        example: 10
        type: integer
      totalItems:
        description: Total number of items matching the query
        example: 48
        type: integer
      totalPages:
        description: Total number of pages available
        example: 5
        type: integer
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.ClassNoteResponse:
    properties:
      content:
        type: string
      courseCode:
        type: string
      createdAt:
        type: string
      departmentId:
        type: integer
      description:
        type: string
      files:
        items:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.SimpleClassNoteFileResponse'
        type: array
      id:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.CommunityListResponse:
    properties:
      communities:
        items:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.CommunityResponse'
        type: array
      currentPage:
        description: Current page number (1-based)
        example: 1
        type: integer
      pageSize:
        description: Number of items per page
        example: 10
        type: integer
      totalItems:
        description: Total number of items matching the query
        example: 48
        type: integer
      totalPages:
        description: Total number of pages available
        example: 5
        type: integer
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.CommunityParticipantResponse:
    properties:
      id:
        type: integer
      joinedAt:
        type: string
      user:
        $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.UserBasicResponse'
      userId:
        type: integer
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.CommunityResponse:
    properties:
      abbreviation:
        type: string
      createdAt:
        type: string
      files:
        items:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.SimpleCommunityFileResponse'
        type: array
      id:
        type: integer
      lead:
        $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.UserBasicResponse'
      leadId:
        type: integer
      name:
        type: string
      participantCount:
        type: integer
      profilePhotoFileId:
        type: integer
      profilePhotoUrl:
        type: string
      updatedAt:
        type: string
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.CreateDepartmentRequest:
    properties:
      code:
        type: string
      facultyId:
        type: integer
      name:
        type: string
    required:
    - code
    - facultyId
    - name
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.CreateFacultyRequest:
    properties:
      code:
        type: string
      name:
        type: string
    required:
    - code
    - name
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.DepartmentListResponse:
    properties:
      currentPage:
        description: Current page number (1-based)
        example: 1
        type: integer
      departments:
        items:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.DepartmentResponse'
        type: array
      pageSize:
        description: Number of items per page
        example: 10
        type: integer
      totalItems:
        description: Total number of items matching the query
        example: 48
        type: integer
      totalPages:
        description: Total number of pages available
        example: 5
        type: integer
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.DepartmentResponse:
    properties:
      code:
        type: string
      facultyId:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.ErrorCode:
    enum:
    - AUTH_001
    - AUTH_002
    - AUTH_003
    - AUTH_004
    - AUTH_005
    - AUTH_006
    - AUTH_007
    - AUTH_008
    - RES_001
    - RES_002
    - RES_003
    - RES_004
    - VAL_001
    - SRV_001
    - SRV_002
    - SRV_003
    - BAD_REQUEST
    - FORBIDDEN
    - INVALID_REQUEST
    type: string
    x-enum-varnames:
    - ErrorCodeInvalidCredentials
    - ErrorCodeInvalidEmail
    - ErrorCodeInvalidPassword
    - ErrorCodeInvalidStudentID
    - ErrorCodeInvalidToken
    - ErrorCodeExpiredToken
    - ErrorCodeTokenNotFound
    - ErrorCodeUnauthorized
    - ErrorCodeResourceNotFound
    - ErrorCodeResourceAlreadyExists
    - ErrorCodeResourceInvalid
    - ErrorCodeConflict
    - ErrorCodeValidationFailed
    - ErrorCodeInternalServer
    - ErrorCodeDatabaseError
    - ErrorCodeExternalServiceError
    - ErrorCodeBadRequest
    - ErrorCodeForbidden
    - ErrorCodeInvalidRequest
  github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail:
    properties:
      code:
        allOf:
        - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorCode'
        example: AUTH_001
      debugInfo:
        type: string
      details: {}
      field:
        example: email
        type: string
      message:
        example: Email format is invalid, school email required
        type: string
      severity:
        allOf:
        - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorSeverity'
        example: ERROR
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse:
    description: Generic response structure for all API endpoints
    properties:
      data:
        description: Response payload - specific to each endpoint
      timestamp:
        description: Timestamp of when the response was generated
        example: "2025-04-23T12:01:05.123Z"
        type: string
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.ErrorSeverity:
    enum:
    - INFO
    - WARNING
    - ERROR
    - CRITICAL
    type: string
    x-enum-varnames:
    - ErrorSeverityInfo
    - ErrorSeverityWarning
    - ErrorSeverityError
    - ErrorSeverityCritical
  github_com_yigit_unisphere_internal_app_models_dto.ExtendedUserResponse:
    properties:
      departmentId:
        type: integer
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      isActive:
        type: boolean
      lastName:
        type: string
      profilePhotoFileId:
        type: integer
      profilePhotoUrl:
        type: string
      role:
        type: string
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.FacultyListResponse:
    properties:
      currentPage:
        description: Current page number (1-based)
        example: 1
        type: integer
      faculties:
        items:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.FacultyResponse'
        type: array
      pageSize:
        description: Number of items per page
        example: 10
        type: integer
      totalItems:
        description: Total number of items matching the query
        example: 48
        type: integer
      totalPages:
        description: Total number of pages available
        example: 5
        type: integer
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.FacultyResponse:
    properties:
      code:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.JoinCommunityRequest:
    properties:
      userId:
        type: integer
    required:
    - userId
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.LeaveCommunityRequest:
    properties:
      userId:
        type: integer
    required:
    - userId
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.PastExamListResponse:
    properties:
      currentPage:
        description: Current page number (1-based)
        example: 1
        type: integer
      pageSize:
        description: Number of items per page
        example: 10
        type: integer
      pastExams:
        items:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.PastExamResponse'
        type: array
      totalItems:
        description: Total number of items matching the query
        example: 48
        type: integer
      totalPages:
        description: Total number of pages available
        example: 5
        type: integer
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.PastExamResponse:
    properties:
      content:
        type: string
      courseCode:
        type: string
      createdAt:
        type: string
      departmentId:
        type: integer
      fileIds:
        items:
          type: integer
        type: array
      id:
        type: integer
      instructorId:
        type: integer
      term:
        type: string
      title:
        type: string
      updatedAt:
        type: string
      year:
        type: integer
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.RefreshTokenRequest:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.RegisterRequest:
    properties:
      departmentId:
        minimum: 1
        type: integer
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        minLength: 8
        type: string
      roleType:
        $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models.RoleType'
    required:
    - departmentId
    - email
    - firstName
    - lastName
    - password
    - roleType
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.SimpleClassNoteFileResponse:
    properties:
      id:
        type: integer
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.SimpleCommunityFileResponse:
    properties:
      id:
        type: integer
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.SuccessResponse:
    properties:
      message:
        example: Resource deleted successfully
        type: string
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.TokenResponse:
    properties:
      accessToken:
        type: string
      expiresIn:
        type: integer
      refreshToken:
        type: string
      refreshTokenExpiresIn:
        type: integer
      tokenType:
        example: Bearer
        type: string
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.UpdateClassNoteRequest:
    properties:
      content:
        type: string
      courseCode:
        type: string
      description:
        type: string
      title:
        type: string
    required:
    - content
    - courseCode
    - description
    - title
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.UpdateCommunityRequest:
    properties:
      abbreviation:
        type: string
      leadId:
        type: integer
      name:
        type: string
    required:
    - abbreviation
    - leadId
    - name
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.UpdateDepartmentRequest:
    properties:
      code:
        type: string
      name:
        type: string
    required:
    - code
    - name
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.UpdateFacultyRequest:
    properties:
      code:
        type: string
      name:
        type: string
    required:
    - code
    - name
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.UpdateProfilePhotoResponse:
    properties:
      profilePhotoFileId:
        type: integer
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.UpdateUserRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
    required:
    - email
    - firstName
    - lastName
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.UserBasicResponse:
    properties:
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.UserListResponse:
    properties:
      currentPage:
        description: Current page number (1-based)
        example: 1
        type: integer
      pageSize:
        description: Number of items per page
        example: 10
        type: integer
      totalItems:
        description: Total number of items matching the query
        example: 48
        type: integer
      totalPages:
        description: Total number of pages available
        example: 5
        type: integer
      users:
        items:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ExtendedUserResponse'
        type: array
    type: object
host: localhost:8080
info:
  contact:
    email: support@unisphere.com
    name: API Support
    url: https://www.unisphere.com/support
  description: API for UniSphere university social platform
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: UniSphere API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns an access token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.TokenResponse'
              type: object
        "400":
          description: Invalid request format or validation error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "403":
          description: Account disabled
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      summary: User login
      tags:
      - auth
  /auth/refresh-token:
    post:
      consumes:
      - application/json
      description: Creates a new access token using a valid refresh token
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Token refreshed successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.TokenResponse'
              type: object
        "400":
          description: Invalid request format or validation error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Invalid refresh token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      summary: Refresh access token
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Creates a new user account (student or instructor) with the provided
        information
      parameters:
      - description: User registration information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.TokenResponse'
              type: object
        "400":
          description: Invalid request format or invalid role type
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "409":
          description: Email already exists
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /class-notes:
    get:
      consumes:
      - application/json
      description: Get a list of all class notes with optional filtering
      parameters:
      - description: Filter by department ID
        in: query
        name: departmentId
        type: integer
      - description: Filter by course code
        in: query
        name: courseCode
        type: string
      - description: Filter by instructor ID
        in: query
        name: instructorId
        type: integer
      - default: 1
        description: Page number (1-based)
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: 'Page size (default: 10, max: 100)'
        in: query
        maximum: 100
        minimum: 1
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ClassNoteListResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - BearerAuth: []
      summary: Get all class notes
      tags:
      - class-notes
    post:
      consumes:
      - multipart/form-data
      description: Create a new class note with file upload
      parameters:
      - description: Course code
        in: formData
        name: courseCode
        required: true
        type: string
      - description: Title
        in: formData
        name: title
        required: true
        type: string
      - description: Description
        in: formData
        name: description
        required: true
        type: string
      - description: Content/text of the note
        in: formData
        name: content
        required: true
        type: string
      - description: Department ID
        in: formData
        name: departmentId
        required: true
        type: integer
      - description: Files to upload
        in: formData
        name: files
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ClassNoteResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - BearerAuth: []
      summary: Create a new class note
      tags:
      - class-notes
  /class-notes/{noteId}:
    delete:
      consumes:
      - application/json
      description: Delete an existing class note
      parameters:
      - description: Class note ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - BearerAuth: []
      summary: Delete a class note
      tags:
      - class-notes
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific class note
      parameters:
      - description: Class note ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ClassNoteResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - BearerAuth: []
      summary: Get a class note by ID
      tags:
      - class-notes
    put:
      consumes:
      - application/json
      description: Update an existing class note
      parameters:
      - description: Class note ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.UpdateClassNoteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ClassNoteResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - BearerAuth: []
      summary: Update a class note
      tags:
      - class-notes
  /class-notes/{noteId}/files:
    post:
      consumes:
      - multipart/form-data
      description: Add multiple files to an existing class note
      parameters:
      - description: Class note ID
        in: path
        name: id
        required: true
        type: integer
      - description: Files to upload
        in: formData
        name: files
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ClassNoteResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - BearerAuth: []
      summary: Add files to an existing class note
      tags:
      - class-notes
  /class-notes/{noteId}/files/{fileId}:
    delete:
      consumes:
      - application/json
      description: Remove a file from a class note
      parameters:
      - description: Class note ID
        in: path
        name: noteId
        required: true
        type: integer
      - description: File ID
        in: path
        name: fileId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - BearerAuth: []
      summary: Delete a file from a class note
      tags:
      - class-notes
  /communities:
    get:
      consumes:
      - application/json
      description: Retrieves a list of communities with optional filtering and pagination.
        Available to all authenticated users.
      parameters:
      - description: Filter by lead ID
        in: query
        name: leadId
        type: integer
      - description: Search by name or abbreviation
        in: query
        name: search
        type: string
      - default: 1
        description: Page number (1-based)
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: 'Page size (default: 10, max: 100)'
        in: query
        maximum: 100
        minimum: 1
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Communities retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.CommunityListResponse'
              type: object
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all communities
      tags:
      - communities
    post:
      consumes:
      - multipart/form-data
      description: Creates a new community with optional file upload
      parameters:
      - description: Community name
        in: formData
        name: name
        required: true
        type: string
      - description: Community abbreviation
        in: formData
        name: abbreviation
        required: true
        type: string
      - description: Lead user ID
        in: formData
        name: leadId
        required: true
        type: integer
      - description: Community files (can upload multiple)
        in: formData
        name: files
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Community created successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.CommunityResponse'
              type: object
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Lead user not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new community
      tags:
      - communities
  /communities/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an existing community by its ID
      parameters:
      - description: Community ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Community deleted successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.SuccessResponse'
              type: object
        "400":
          description: Invalid community ID
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Community not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a community
      tags:
      - communities
    get:
      consumes:
      - application/json
      description: Retrieves a specific community by its ID
      parameters:
      - description: Community ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Community retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.CommunityResponse'
              type: object
        "400":
          description: Invalid community ID
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Community not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get community by ID
      tags:
      - communities
    put:
      consumes:
      - application/json
      description: Updates an existing community with the provided information
      parameters:
      - description: Community ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update community request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.UpdateCommunityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Community updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.CommunityResponse'
              type: object
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Community not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update a community
      tags:
      - communities
  /communities/{id}/files:
    post:
      consumes:
      - multipart/form-data
      description: Add one or more files to an existing community
      parameters:
      - description: Community ID
        in: path
        name: id
        required: true
        type: integer
      - description: Files to upload (can be multiple)
        in: formData
        name: files
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - BearerAuth: []
      summary: Add files to an existing community
      tags:
      - communities
  /communities/{id}/files/{fileId}:
    delete:
      consumes:
      - application/json
      description: Remove a file from a community
      parameters:
      - description: Community ID
        in: path
        name: id
        required: true
        type: integer
      - description: File ID
        in: path
        name: fileId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - BearerAuth: []
      summary: Delete a file from a community
      tags:
      - communities
  /communities/{id}/participants:
    delete:
      consumes:
      - application/json
      description: Remove a user as a participant from a community
      parameters:
      - description: Community ID
        in: path
        name: id
        required: true
        type: integer
      - description: Leave community request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.LeaveCommunityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User left community successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "409":
          description: Lead cannot leave community
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - BearerAuth: []
      summary: Leave a community
      tags:
      - communities
    get:
      consumes:
      - application/json
      description: Get all participants of a community
      parameters:
      - description: Community ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Participants retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.CommunityParticipantResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - BearerAuth: []
      summary: Get community participants
      tags:
      - communities
    post:
      consumes:
      - application/json
      description: Add a user as a participant to a community
      parameters:
      - description: Community ID
        in: path
        name: id
        required: true
        type: integer
      - description: Join community request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.JoinCommunityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User joined community successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "409":
          description: User is already a participant
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - BearerAuth: []
      summary: Join a community
      tags:
      - communities
  /communities/{id}/participants/check:
    get:
      consumes:
      - application/json
      description: Check if a specific user is a participant in the community
      parameters:
      - description: Community ID
        in: path
        name: id
        required: true
        type: integer
      - description: User ID
        in: query
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Participation status checked successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    type: boolean
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - BearerAuth: []
      summary: Check if user is a participant
      tags:
      - communities
  /communities/{id}/profile-photo:
    delete:
      consumes:
      - application/json
      description: Remove the profile photo from a community
      parameters:
      - description: Community ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Profile photo deleted successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - BearerAuth: []
      summary: Delete a community's profile photo
      tags:
      - communities
    post:
      consumes:
      - multipart/form-data
      description: Update the profile photo for a community
      parameters:
      - description: Community ID
        in: path
        name: id
        required: true
        type: integer
      - description: Profile photo to upload
        in: formData
        name: photo
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Profile photo updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.CommunityResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - BearerAuth: []
      summary: Update a community's profile photo
      tags:
      - communities
  /departments:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all departments
      parameters:
      - description: Filter by faculty ID
        in: query
        name: facultyId
        type: integer
      - default: 1
        description: Page number (1-based)
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        maximum: 100
        minimum: 1
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Departments retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.DepartmentListResponse'
              type: object
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      summary: Get all departments
      tags:
      - departments
    post:
      consumes:
      - application/json
      description: Creates a new department with the provided information
      parameters:
      - description: Department information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.CreateDepartmentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Department created successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.DepartmentResponse'
              type: object
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "403":
          description: Forbidden - User does not have permission
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Faculty not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "409":
          description: Department already exists
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new department
      tags:
      - departments
  /departments/{departmentId}/users:
    get:
      consumes:
      - application/json
      description: Retrieves a list of users for a specific department with optional
        role filtering
      parameters:
      - description: Department ID
        format: int64
        in: path
        minimum: 1
        name: departmentId
        required: true
        type: integer
      - description: Filter by role (STUDENT, INSTRUCTOR)
        in: query
        name: role
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Users retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ExtendedUserResponse'
                  type: array
              type: object
        "400":
          description: Invalid department ID format
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Department not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get users by department
      tags:
      - users
  /departments/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an existing department by its ID
      parameters:
      - description: Department ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Department deleted successfully
        "400":
          description: Invalid department ID
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Department not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a department
      tags:
      - departments
    get:
      consumes:
      - application/json
      description: Retrieves a specific department by its ID
      parameters:
      - description: Department ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Department retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.DepartmentResponse'
              type: object
        "400":
          description: Invalid department ID
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Department not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get department by ID
      tags:
      - departments
    put:
      consumes:
      - application/json
      description: Updates an existing department with the provided information
      parameters:
      - description: Department ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated department information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.UpdateDepartmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Department updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.DepartmentResponse'
              type: object
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Department not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update a department
      tags:
      - departments
  /faculties:
    get:
      consumes:
      - application/json
      parameters:
      - default: 1
        description: Page number (1-based)
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        maximum: 100
        minimum: 1
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Faculties retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.FacultyListResponse'
              type: object
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all faculties
      tags:
      - faculties
    post:
      consumes:
      - application/json
      parameters:
      - description: Faculty information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.CreateFacultyRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Faculty created successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.FacultyResponse'
              type: object
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "403":
          description: Forbidden - User does not have permission
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "409":
          description: Faculty already exists
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new faculty
      tags:
      - faculties
  /faculties/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Faculty ID
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Faculty deleted successfully
        "400":
          description: Invalid faculty ID
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "403":
          description: Forbidden - User does not have permission
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Faculty not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a faculty
      tags:
      - faculties
    get:
      consumes:
      - application/json
      parameters:
      - description: Faculty ID
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Faculty retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.FacultyResponse'
              type: object
        "400":
          description: Invalid faculty ID format
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Faculty not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get faculty details
      tags:
      - faculties
    put:
      consumes:
      - application/json
      parameters:
      - description: Faculty ID
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: Updated faculty information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.UpdateFacultyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Faculty updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.FacultyResponse'
              type: object
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "403":
          description: Forbidden - User does not have permission
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Faculty not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update a faculty
      tags:
      - faculties
  /faculty-departments/{facultyId}:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all departments belonging to a specific faculty
      parameters:
      - description: Faculty ID
        format: int64
        in: path
        minimum: 1
        name: facultyId
        required: true
        type: integer
      - default: 1
        description: Page number (1-based)
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        maximum: 100
        minimum: 1
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Faculty departments retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.DepartmentListResponse'
              type: object
        "400":
          description: Invalid faculty ID format
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Faculty not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List faculty departments
      tags:
      - departments
  /files/{fileId}:
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific file (works for any file
        type)
      parameters:
      - description: File ID
        in: path
        name: fileId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ClassNoteFileResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - BearerAuth: []
      summary: Get file details
      tags:
      - files
  /past-exams:
    get:
      consumes:
      - application/json
      description: Retrieves a list of past exams with optional filtering and pagination.
        Available to all authenticated users.
      parameters:
      - description: Filter by faculty ID
        in: query
        name: facultyId
        type: integer
      - description: Filter by department ID
        in: query
        name: departmentId
        type: integer
      - description: Filter by course code
        in: query
        name: courseCode
        type: string
      - description: Filter by year
        in: query
        name: year
        type: integer
      - description: Filter by term (FALL, SPRING)
        in: query
        name: term
        type: string
      - description: Sort field (year, term, courseCode, title, departmentName, facultyName,
          instructorName, createdAt, updatedAt)
        in: query
        name: sortBy
        type: string
      - description: Sort order (ASC, DESC)
        in: query
        name: sortOrder
        type: string
      - default: 1
        description: Page number (1-based)
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: 'Page size (default: 10, max: 100)'
        in: query
        maximum: 100
        minimum: 1
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Past exams retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.PastExamListResponse'
              type: object
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all past exams
      tags:
      - past-exams
    post:
      consumes:
      - multipart/form-data
      description: Create a new past exam with file upload. Only instructors can create
        past exams. The current authenticated instructor will be set as the instructor
        of the exam.
      parameters:
      - description: Year
        in: formData
        name: year
        required: true
        type: integer
      - description: Term (FALL, SPRING)
        in: formData
        name: term
        required: true
        type: string
      - description: Department ID
        in: formData
        name: departmentId
        required: true
        type: integer
      - description: Course code
        in: formData
        name: courseCode
        required: true
        type: string
      - description: Title
        in: formData
        name: title
        required: true
        type: string
      - description: Exam files (can upload multiple)
        in: formData
        name: files
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.PastExamResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "403":
          description: 'Forbidden: User does not have instructor role'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - BearerAuth: []
      summary: Create a new past exam
      tags:
      - past-exams
  /past-exams/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an existing past exam by its ID
      parameters:
      - description: Past exam ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Past exam deleted successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.SuccessResponse'
              type: object
        "400":
          description: Invalid past exam ID
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "403":
          description: 'Forbidden: User does not have instructor role or is not the
            creator'
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Past exam not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      summary: Delete a past exam
      tags:
      - past-exams
    get:
      consumes:
      - application/json
      description: Retrieves a specific past exam by its ID
      parameters:
      - description: Past exam ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Past exam retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.PastExamResponse'
              type: object
        "400":
          description: Invalid past exam ID
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Past exam not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      summary: Get past exam by ID
      tags:
      - past-exams
    put:
      consumes:
      - multipart/form-data
      description: Updates an existing past exam with the provided information. Only
        instructors can update past exams. The instructor must be the owner of the
        exam.
      parameters:
      - description: Past exam ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year of the exam
        in: formData
        name: year
        type: integer
      - description: Term of the exam (FALL, SPRING)
        in: formData
        name: term
        type: string
      - description: Department ID
        in: formData
        name: departmentId
        type: integer
      - description: Course code
        in: formData
        name: courseCode
        type: string
      - description: Exam title
        in: formData
        name: title
        type: string
      - description: Exam file
        in: formData
        name: file
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Past exam updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.PastExamResponse'
              type: object
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "403":
          description: 'Forbidden: User does not have instructor role or is not the
            creator'
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Past exam not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update a past exam
      tags:
      - past-exams
  /past-exams/{id}/files:
    post:
      consumes:
      - multipart/form-data
      description: Add one or more files to an existing past exam
      parameters:
      - description: Past exam ID
        in: path
        name: id
        required: true
        type: integer
      - description: Files to upload (can be multiple)
        in: formData
        name: files
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "403":
          description: 'Forbidden: User does not have instructor role or is not the
            creator'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - BearerAuth: []
      summary: Add files to an existing past exam
      tags:
      - past-exams
  /past-exams/{id}/files/{fileId}:
    delete:
      consumes:
      - application/json
      description: Remove a file from a past exam
      parameters:
      - description: Past exam ID
        in: path
        name: id
        required: true
        type: integer
      - description: File ID
        in: path
        name: fileId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: 'Unauthorized: JWT token missing or invalid'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "403":
          description: 'Forbidden: User does not have instructor role or is not the
            creator'
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - BearerAuth: []
      summary: Delete a file from a past exam
      tags:
      - past-exams
  /users:
    get:
      consumes:
      - application/json
      description: Retrieves a list of users based on filter criteria with pagination
      parameters:
      - description: Filter by department ID
        in: query
        name: departmentId
        type: integer
      - description: Filter by role (STUDENT, INSTRUCTOR)
        in: query
        name: role
        type: string
      - description: Filter by email (partial match)
        in: query
        name: email
        type: string
      - description: Filter by name (partial match on first or last name)
        in: query
        name: name
        type: string
      - default: 1
        description: Page number (1-based)
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: 'Page size (default: 10, max: 100)'
        in: query
        maximum: 100
        minimum: 1
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Users retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.UserListResponse'
              type: object
        "400":
          description: Invalid filter parameters
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get users by filter
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves a specific user by their ID
      parameters:
      - description: User ID
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ExtendedUserResponse'
              type: object
        "400":
          description: Invalid user ID format
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user by ID
      tags:
      - users
  /users/profile:
    get:
      description: Get detailed profile information for the currently authenticated
        user
      produces:
      - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ExtendedUserResponse'
              type: object
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update profile information for the currently authenticated user
      parameters:
      - description: Profile update information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Profile updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ExtendedUserResponse'
              type: object
        "400":
          description: Invalid request format or validation error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "409":
          description: Email already in use
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update user profile
      tags:
      - users
  /users/profile/photo:
    delete:
      description: Deletes the profile photo for the currently authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: Profile photo deleted successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  type: string
              type: object
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete profile photo
      tags:
      - users
    post:
      consumes:
      - multipart/form-data
      description: Update profile photo for the currently authenticated user
      parameters:
      - description: Profile photo to upload
        in: formData
        name: photo
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Profile photo updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.UpdateProfilePhotoResponse'
              type: object
        "400":
          description: Invalid file format or missing file
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update profile photo
      tags:
      - users
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: 'Enter ''Bearer'' followed by a space and your JWT token. Example:
      ''Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'''
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
