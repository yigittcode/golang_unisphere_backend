basePath: /api/v1
definitions:
  github_com_yigit_unisphere_internal_app_models.Department:
    properties:
      code:
        description: Unique code for the department (e.g., CENG, EEE, MATH)
        example: CENG
        type: string
      faculty:
        allOf:
        - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models.Faculty'
        description: Associated faculty details (populated in some responses)
      faculty_id:
        description: ID of the faculty this department belongs to (required)
        example: 1
        type: integer
      id:
        description: Unique identifier for the department
        example: 1
        type: integer
      name:
        description: Name of the department (required)
        example: Computer Engineering
        type: string
    required:
    - code
    - faculty_id
    - name
    type: object
  github_com_yigit_unisphere_internal_app_models.Faculty:
    properties:
      code:
        description: Unique code for the faculty (e.g., ENG, SCI)
        example: ENG
        type: string
      description:
        description: Optional description of the faculty
        example: Faculty of Engineering and Natural Sciences
        type: string
      id:
        description: Unique identifier for the faculty
        example: 1
        type: integer
      name:
        description: Name of the faculty (required)
        example: Engineering Faculty
        type: string
    required:
    - code
    - name
    type: object
  github_com_yigit_unisphere_internal_app_models.PastExam:
    properties:
      courseCode:
        type: string
      departmentID:
        type: integer
      fileID:
        type: string
      id:
        type: integer
      instructorID:
        type: integer
      term:
        type: string
      year:
        type: integer
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.APIResponse:
    description: Generic response structure for all API endpoints
    properties:
      data:
        description: Response payload - specific to each endpoint
      timestamp:
        description: Timestamp of when the response was generated
        example: "2025-04-23T12:01:05.123Z"
        type: string
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.AuthResponse:
    properties:
      token:
        $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.TokenResponse'
      user:
        $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.UserResponse'
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.ClassNoteListResponse:
    properties:
      classNotes:
        items:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ClassNoteResponse'
        type: array
      currentPage:
        description: Current page number (0-based)
        example: 0
        type: integer
      pageSize:
        description: Number of items per page
        example: 10
        type: integer
      totalItems:
        description: Total number of items matching the query
        example: 48
        type: integer
      totalPages:
        description: Total number of pages available
        example: 5
        type: integer
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.ClassNoteResponse:
    properties:
      courseCode:
        type: string
      departmentId:
        type: integer
      description:
        type: string
      fileId:
        type: string
      id:
        type: integer
      instructorId:
        type: integer
      title:
        type: string
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.CreateDepartmentRequest:
    properties:
      facultyId:
        type: integer
      name:
        type: string
    required:
    - facultyId
    - name
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.CreateFacultyRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.DepartmentResponse:
    properties:
      facultyId:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.ErrorCode:
    enum:
    - AUTH_001
    - AUTH_002
    - AUTH_003
    - AUTH_004
    - AUTH_005
    - AUTH_006
    - AUTH_007
    - AUTH_008
    - RES_001
    - RES_002
    - RES_003
    - VAL_001
    - SRV_001
    - SRV_002
    - SRV_003
    - BAD_REQUEST
    - FORBIDDEN
    - INVALID_REQUEST
    type: string
    x-enum-varnames:
    - ErrorCodeInvalidCredentials
    - ErrorCodeInvalidEmail
    - ErrorCodeInvalidPassword
    - ErrorCodeInvalidStudentID
    - ErrorCodeInvalidToken
    - ErrorCodeExpiredToken
    - ErrorCodeTokenNotFound
    - ErrorCodeUnauthorized
    - ErrorCodeResourceNotFound
    - ErrorCodeResourceAlreadyExists
    - ErrorCodeResourceInvalid
    - ErrorCodeValidationFailed
    - ErrorCodeInternalServer
    - ErrorCodeDatabaseError
    - ErrorCodeExternalServiceError
    - ErrorCodeBadRequest
    - ErrorCodeForbidden
    - ErrorCodeInvalidRequest
  github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail:
    properties:
      code:
        allOf:
        - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorCode'
        example: AUTH_001
      debugInfo:
        type: string
      details: {}
      field:
        example: email
        type: string
      message:
        example: Email format is invalid, school email required
        type: string
      severity:
        allOf:
        - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorSeverity'
        example: ERROR
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse:
    properties:
      error:
        $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
      timestamp:
        example: "2025-04-23T12:01:05.123Z"
        type: string
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.ErrorSeverity:
    enum:
    - INFO
    - WARNING
    - ERROR
    - CRITICAL
    type: string
    x-enum-varnames:
    - ErrorSeverityInfo
    - ErrorSeverityWarning
    - ErrorSeverityError
    - ErrorSeverityCritical
  github_com_yigit_unisphere_internal_app_models_dto.FacultyResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.FileResponse:
    properties:
      id:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.InstructorResponse:
    properties:
      createdAt:
        description: When instructor account was created
        type: string
      departmentId:
        description: Department ID
        type: integer
      departmentName:
        description: Department name
        type: string
      email:
        description: Instructor's email
        type: string
      facultyName:
        description: Faculty name
        type: string
      firstName:
        description: Instructor's first name
        type: string
      id:
        description: Unique identifier for the instructor
        type: integer
      lastName:
        description: Instructor's last name
        type: string
      title:
        description: Instructor's academic title
        type: string
      userId:
        description: Associated user ID
        type: integer
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.PaginationInfo:
    properties:
      currentPage:
        description: Current page number (0-based)
        example: 0
        type: integer
      pageSize:
        description: Number of items per page
        example: 10
        type: integer
      totalItems:
        description: Total number of items matching the query
        example: 48
        type: integer
      totalPages:
        description: Total number of pages available
        example: 5
        type: integer
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.RefreshTokenRequest:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.RegisterInstructorRequest:
    properties:
      departmentId:
        type: integer
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        minLength: 8
        type: string
      title:
        type: string
    required:
    - departmentId
    - email
    - firstName
    - lastName
    - password
    - title
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.RegisterStudentRequest:
    properties:
      departmentId:
        type: integer
      email:
        type: string
      firstName:
        type: string
      graduationYear:
        minimum: 1900
        type: integer
      lastName:
        type: string
      password:
        minLength: 8
        type: string
      studentId:
        type: string
    required:
    - departmentId
    - email
    - firstName
    - lastName
    - password
    - studentId
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.SuccessResponse:
    properties:
      message:
        example: Resource deleted successfully
        type: string
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.TokenResponse:
    properties:
      accessToken:
        type: string
      expiresIn:
        type: integer
      refreshToken:
        type: string
      tokenType:
        example: Bearer
        type: string
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.UpdateClassNoteRequest:
    properties:
      courseCode:
        type: string
      description:
        type: string
      title:
        type: string
    required:
    - courseCode
    - description
    - title
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.UpdateDepartmentRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.UpdateFacultyRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.UpdateProfileRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
    required:
    - email
    - firstName
    - lastName
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.UpdateTitleRequest:
    properties:
      title:
        description: New academic title
        example: Professor
        type: string
    required:
    - title
    type: object
  github_com_yigit_unisphere_internal_app_models_dto.UserResponse:
    properties:
      departmentId:
        type: integer
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      role:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@unisphere.com
    name: API Support
    url: https://www.unisphere.com/support
  description: API for UniSphere university social platform
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: UniSphere API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns access and refresh tokens
      parameters:
      - description: User login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.TokenResponse'
              type: object
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "403":
          description: Account is locked or disabled
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      summary: Login user
      tags:
      - auth
  /auth/profile:
    get:
      consumes:
      - application/json
      description: Retrieves the profile information of the currently authenticated
        user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.UserResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get current user profile
      tags:
      - auth
    put:
      consumes:
      - application/json
      description: Update the current user's profile information
      parameters:
      - description: Profile update details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.UserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      summary: Update user profile
      tags:
      - auth
  /auth/profile/photo:
    delete:
      consumes:
      - application/json
      description: Delete the current user's profile photo
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.UserResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      summary: Delete profile photo
      tags:
      - auth
    put:
      consumes:
      - multipart/form-data
      description: Update the current user's profile photo
      parameters:
      - description: Profile photo file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.FileResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      summary: Update profile photo
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Generates a new access token using a valid refresh token
      parameters:
      - description: Refresh token information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Token refreshed successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.TokenResponse'
              type: object
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Invalid or expired refresh token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      summary: Refresh access token
      tags:
      - auth
  /auth/register/instructor:
    post:
      consumes:
      - application/json
      description: Creates a new instructor account with the provided information
      parameters:
      - description: Instructor registration information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.RegisterInstructorRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Instructor registered successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.AuthResponse'
              type: object
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "409":
          description: Email already exists
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      summary: Register a new instructor
      tags:
      - auth
  /auth/register/student:
    post:
      consumes:
      - application/json
      description: Creates a new student account with the provided information
      parameters:
      - description: Student registration information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.RegisterStudentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Student registered successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.AuthResponse'
              type: object
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "409":
          description: Email or student ID already exists
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      summary: Register a new student
      tags:
      - auth
  /class-notes:
    get:
      consumes:
      - application/json
      description: Get a list of all class notes with optional filtering
      parameters:
      - description: Filter by department ID
        in: query
        name: departmentId
        type: integer
      - description: Filter by course code
        in: query
        name: courseCode
        type: string
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Page size (default: 10, max: 100)'
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ClassNoteListResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get all class notes
      tags:
      - class-notes
    post:
      consumes:
      - multipart/form-data
      description: Create a new class note with file upload
      parameters:
      - description: Course code
        in: formData
        name: courseCode
        required: true
        type: string
      - description: Title
        in: formData
        name: title
        required: true
        type: string
      - description: Description
        in: formData
        name: description
        required: true
        type: string
      - description: Department ID
        in: formData
        name: departmentId
        required: true
        type: integer
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ClassNoteResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new class note
      tags:
      - class-notes
  /class-notes/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing class note
      parameters:
      - description: Class note ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.SuccessResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a class note
      tags:
      - class-notes
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific class note
      parameters:
      - description: Class note ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ClassNoteResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get a class note by ID
      tags:
      - class-notes
    put:
      consumes:
      - application/json
      description: Update an existing class note
      parameters:
      - description: Class note ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.UpdateClassNoteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ClassNoteResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                error:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorDetail'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update a class note
      tags:
      - class-notes
  /departments:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all departments
      parameters:
      - description: Filter by faculty ID
        in: query
        name: facultyId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Departments retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models.Department'
                  type: array
              type: object
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      summary: Get all departments
      tags:
      - departments
    post:
      consumes:
      - application/json
      description: Creates a new department with the provided information
      parameters:
      - description: Department information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.CreateDepartmentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Department created successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.DepartmentResponse'
              type: object
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "403":
          description: Forbidden - User does not have permission
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Faculty not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "409":
          description: Department already exists
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new department
      tags:
      - departments
  /departments/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an existing department by its ID
      parameters:
      - description: Department ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Department deleted successfully
        "400":
          description: Invalid department ID
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Department not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a department
      tags:
      - departments
    get:
      consumes:
      - application/json
      description: Retrieves a specific department by its ID
      parameters:
      - description: Department ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Department retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models.Department'
              type: object
        "400":
          description: Invalid department ID
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Department not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get department by ID
      tags:
      - departments
    put:
      consumes:
      - application/json
      description: Updates an existing department with the provided information
      parameters:
      - description: Department ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated department information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.UpdateDepartmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Department updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models.Department'
              type: object
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Department not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update a department
      tags:
      - departments
  /faculties:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all faculties
      produces:
      - application/json
      responses:
        "200":
          description: Faculties retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models.Faculty'
                  type: array
              type: object
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all faculties
      tags:
      - faculties
    post:
      consumes:
      - application/json
      description: Creates a new faculty with the provided information
      parameters:
      - description: Faculty information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.CreateFacultyRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Faculty created successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.FacultyResponse'
              type: object
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "403":
          description: Forbidden - User does not have permission
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "409":
          description: Faculty already exists
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new faculty
      tags:
      - faculties
  /faculties/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a faculty and its associated data
      parameters:
      - description: Faculty ID
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Faculty deleted successfully
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
        "400":
          description: Invalid faculty ID
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "403":
          description: Forbidden - User does not have permission
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Faculty not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a faculty
      tags:
      - faculties
    get:
      consumes:
      - application/json
      description: Retrieves detailed information about a specific faculty by its
        ID
      parameters:
      - description: Faculty ID
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Faculty retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.FacultyResponse'
              type: object
        "400":
          description: Invalid faculty ID format
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Faculty not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get faculty details
      tags:
      - faculties
    put:
      consumes:
      - application/json
      description: Updates an existing faculty with new information
      parameters:
      - description: Faculty ID
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: Updated faculty information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.UpdateFacultyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Faculty updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.FacultyResponse'
              type: object
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "403":
          description: Forbidden - User does not have permission
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Faculty not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update a faculty
      tags:
      - faculties
  /faculty-departments/{facultyId}:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all departments belonging to a specific faculty
      parameters:
      - description: Faculty ID
        format: int64
        in: path
        minimum: 1
        name: facultyId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Faculty departments retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.DepartmentResponse'
                  type: array
              type: object
        "400":
          description: Invalid faculty ID format
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Faculty not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List faculty departments
      tags:
      - departments
  /instructors/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves a specific instructor by its ID
      parameters:
      - description: Instructor ID
        format: int64
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Instructor retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.InstructorResponse'
              type: object
        "400":
          description: Invalid instructor ID format
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Instructor not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get instructor by ID
      tags:
      - instructors
  /instructors/department/{departmentId}:
    get:
      consumes:
      - application/json
      description: Retrieves a list of instructors for a specific department
      parameters:
      - description: Department ID
        format: int64
        in: path
        minimum: 1
        name: departmentId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Instructors retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.InstructorResponse'
                  type: array
              type: object
        "400":
          description: Invalid department ID format
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Department not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get instructors by department
      tags:
      - instructors
  /instructors/profile:
    get:
      description: Get detailed profile information for the currently authenticated
        instructor (Requires instructor role)
      produces:
      - application/json
      responses:
        "200":
          description: Instructor profile retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.InstructorResponse'
              type: object
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "403":
          description: Forbidden - User is not an instructor or token invalid
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Instructor not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get instructor profile
      tags:
      - instructors
  /instructors/title:
    put:
      consumes:
      - application/json
      description: Update the academic title for the currently authenticated instructor
        (Requires instructor role)
      parameters:
      - description: New title information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.UpdateTitleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Instructor title updated successfully
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
        "400":
          description: Invalid request format or validation error (e.g., empty title)
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized - Invalid or missing token
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "403":
          description: Forbidden - User is not an instructor or token invalid
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Instructor not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update instructor title
      tags:
      - instructors
  /past-exams:
    get:
      consumes:
      - application/json
      description: Retrieves a list of past exams with optional filtering and pagination
      parameters:
      - description: Filter by faculty ID
        in: query
        name: facultyId
        type: integer
      - description: Filter by department ID
        in: query
        name: departmentId
        type: integer
      - description: Filter by course code
        in: query
        name: courseCode
        type: string
      - description: Filter by year
        in: query
        name: year
        type: integer
      - description: Filter by term (FALL, SPRING, SUMMER)
        in: query
        name: term
        type: string
      - description: Sort field (year, term, courseCode, title, departmentName, facultyName,
          instructorName, createdAt, updatedAt)
        in: query
        name: sortBy
        type: string
      - description: Sort order (ASC, DESC)
        in: query
        name: sortOrder
        type: string
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Page size (default: 10)'
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Past exams retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models.PastExam'
                  type: array
                pagination:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.PaginationInfo'
              type: object
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      summary: Get all past exams
      tags:
      - past-exams
    post:
      consumes:
      - multipart/form-data
      description: Creates a new past exam with the provided information
      parameters:
      - description: Year of the exam
        in: formData
        name: year
        required: true
        type: integer
      - description: Term of the exam (FALL, SPRING, SUMMER)
        in: formData
        name: term
        required: true
        type: string
      - description: Department ID
        in: formData
        name: departmentId
        required: true
        type: integer
      - description: Course code
        in: formData
        name: courseCode
        required: true
        type: string
      - description: Exam title
        in: formData
        name: title
        required: true
        type: string
      - description: Instructor ID
        in: formData
        name: instructorId
        type: integer
      - description: Exam file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Past exam created successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models.PastExam'
              type: object
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      summary: Create a new past exam
      tags:
      - past-exams
  /past-exams/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an existing past exam by its ID
      parameters:
      - description: Past exam ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Past exam deleted successfully
        "400":
          description: Invalid past exam ID
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Past exam not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      summary: Delete a past exam
      tags:
      - past-exams
    get:
      consumes:
      - application/json
      description: Retrieves a specific past exam by its ID
      parameters:
      - description: Past exam ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Past exam retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models.PastExam'
              type: object
        "400":
          description: Invalid past exam ID
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Past exam not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      summary: Get past exam by ID
      tags:
      - past-exams
    put:
      consumes:
      - multipart/form-data
      description: Updates an existing past exam with the provided information
      parameters:
      - description: Past exam ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year of the exam
        in: formData
        name: year
        type: integer
      - description: Term of the exam (FALL, SPRING, SUMMER)
        in: formData
        name: term
        type: string
      - description: Department ID
        in: formData
        name: departmentId
        type: integer
      - description: Course code
        in: formData
        name: courseCode
        type: string
      - description: Exam title
        in: formData
        name: title
        type: string
      - description: Instructor ID
        in: formData
        name: instructorId
        type: integer
      - description: Exam file
        in: formData
        name: file
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Past exam updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models.PastExam'
              type: object
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "404":
          description: Past exam not found
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_yigit_unisphere_internal_app_models_dto.ErrorResponse'
      summary: Update a past exam
      tags:
      - past-exams
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Enter your JWT token (without Bearer prefix)
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
